{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vivek Sheel Thakral\\\\Assignment1_PokemonApp\\\\src\\\\components\\\\PokemonCard.tsx\";\nimport React from 'react';\nimport './PokemonCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = ({\n  id,\n  name,\n  types,\n  image\n}) => {\n  // Function to get type color\n  const getTypeColor = type => {\n    const typeColors = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      electric: '#F8D030',\n      grass: '#78C850',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dragon: '#7038F8',\n      dark: '#705848',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n      // TODO: Add more type colors if needed\n    };\n    return typeColors[type] || '#999999';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-id\",\n      children: [\"#\", id.toString().padStart(3, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `${name} sprite`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pokemon-name\",\n      children: name.charAt(0).toUpperCase() + name.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-types\",\n      children: types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"type-badge\",\n        style: {\n          backgroundColor: getTypeColor(type)\n        },\n        children: type.charAt(0).toUpperCase() + type.slice(1)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PokemonCard","id","name","types","image","getTypeColor","type","typeColors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","className","children","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","charAt","toUpperCase","slice","map","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Vivek Sheel Thakral/Assignment1_PokemonApp/src/components/PokemonCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport './PokemonCard.css';\r\n\r\ninterface PokemonCardProps {\r\n  id: number;\r\n  name: string;\r\n  types: string[];\r\n  image: string;\r\n}\r\n\r\nconst PokemonCard: React.FC<PokemonCardProps> = ({ id, name, types, image }) => {\r\n  // Function to get type color\r\n  const getTypeColor = (type: string): string => {\r\n    const typeColors: { [key: string]: string } = {\r\n      normal: '#A8A878',\r\n      fire: '#F08030',\r\n      water: '#6890F0',\r\n      electric: '#F8D030',\r\n      grass: '#78C850',\r\n      ice: '#98D8D8',\r\n      fighting: '#C03028',\r\n      poison: '#A040A0',\r\n      ground: '#E0C068',\r\n      flying: '#A890F0',\r\n      psychic: '#F85888',\r\n      bug: '#A8B820',\r\n      rock: '#B8A038',\r\n      ghost: '#705898',\r\n      dragon: '#7038F8',\r\n      dark: '#705848',\r\n      steel: '#B8B8D0',\r\n      fairy: '#EE99AC',\r\n      // TODO: Add more type colors if needed\r\n    };\r\n\r\n    return typeColors[type] || '#999999';\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-card\">\r\n      <div className=\"pokemon-id\">#{id.toString().padStart(3, '0')}</div>\r\n      <div className=\"pokemon-image\">\r\n        <img src={image} alt={`${name} sprite`} />\r\n      </div>\r\n      <h3 className=\"pokemon-name\">{name.charAt(0).toUpperCase() + name.slice(1)}</h3>\r\n      <div className=\"pokemon-types\">\r\n        {types.map((type) => (\r\n          <span \r\n            key={type} \r\n            className=\"type-badge\"\r\n            style={{ backgroundColor: getTypeColor(type) }}\r\n          >\r\n            {type.charAt(0).toUpperCase() + type.slice(1)}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,EAAE;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAC9E;EACA,MAAMC,YAAY,GAAIC,IAAY,IAAa;IAC7C,MAAMC,UAAqC,GAAG;MAC5CC,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE,SAAS;MACnBC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,QAAQ,EAAE,SAAS;MACnBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,SAAS;MAClBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,SAAS;MACjBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,KAAK,EAAE;MACP;IACF,CAAC;IAED,OAAOlB,UAAU,CAACD,IAAI,CAAC,IAAI,SAAS;EACtC,CAAC;EAED,oBACEP,OAAA;IAAK2B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B5B,OAAA;MAAK2B,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,GAAC,EAAC1B,EAAE,CAAC2B,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnElC,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B5B,OAAA;QAAKmC,GAAG,EAAE9B,KAAM;QAAC+B,GAAG,EAAE,GAAGjC,IAAI;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACNlC,OAAA;MAAI2B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEzB,IAAI,CAACkC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGnC,IAAI,CAACoC,KAAK,CAAC,CAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChFlC,OAAA;MAAK2B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BxB,KAAK,CAACoC,GAAG,CAAEjC,IAAI,iBACdP,OAAA;QAEE2B,SAAS,EAAC,YAAY;QACtBc,KAAK,EAAE;UAAEC,eAAe,EAAEpC,YAAY,CAACC,IAAI;QAAE,CAAE;QAAAqB,QAAA,EAE9CrB,IAAI,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/B,IAAI,CAACgC,KAAK,CAAC,CAAC;MAAC,GAJxChC,IAAI;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,GAhDI1C,WAAuC;AAkD7C,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}